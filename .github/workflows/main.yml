# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    paths:
      - '**.ts'
      - '**.json'
      - '**.yml'
      - '**.yaml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs called "job_"
  job_ci-cd_pipeline:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy: 
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3        


      # Runs single commands using the runners shell
      - name: Use Node.js ${{ matrix.node.version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node.version }}
      - run: |
      
          npm install
          npm list
          
      - run: |
      
          cd package/frontend
          npm install
          npm list
          
      - run: |

          cd package/frontend/ethereum/voximplant/backend
          npm install
          npm list
          
# job_deploy_voximplant:          
      # Runs single commands using the runners shell
      - name: Use Node.js ${{ matrix.node.version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node.version }}
      - run: |
      
          cd package/frontend/ethereum/voximplant/
          npm run build
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          npm run alias-gcen output
          
          
  job_deploy_ethereum:
    needs: [job_ci-cd_pipeline]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy: 
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3        


      # Runs single commands using the runners shell
      - name: Use Node.js ${{ matrix.node.version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node.version }}
#       - run: |
      
#           pwd
#           cd package/frontend/ethereum/
          
#       - run: |
      
#           pwd
#           npm run cli
          
#       - run: |
      
#           pwd
#           npm run build
          
#       - run: |
      
#           pwd
#           npm run gcen output
          
  job_deploy_sipoc:
    needs: [job_ci-cd_pipeline]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy: 
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3        


      # Runs single commands using the runners shell
      - name: Use Node.js ${{ matrix.node.version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node.version }}
#       - run: |
      
#           pwd
#           cd package/frontend/sipoc/
          
#       - run: |
      
#           pwd
#           npm run cli
          
#       - run: |
      
#           pwd
#           npm run build
          
#       - run: |
      
#           pwd
#           npm run gcen output
          
#   job_deploy_website:
#     needs: [job_ci-cd_pipeline]
    # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     strategy: 
#       matrix:
#         node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3        

#       - name: Archive production artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: output-index
#           path: |
#             name: index
#             path: package/frontend/ethereum/backend/voximplant/output/index.js
            
